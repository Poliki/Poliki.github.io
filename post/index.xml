<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Poliki&#39;s Site</title>
    <link>https://example.com/post/</link>
    <description>Recent content in Posts on Poliki&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 10 Dec 2020 22:15:14 +0800</lastBuildDate><atom:link href="https://example.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MongoDB基础</title>
      <link>https://example.com/p/mongodb%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Thu, 10 Dec 2020 22:15:14 +0800</pubDate>
      
      <guid>https://example.com/p/mongodb%E5%9F%BA%E7%A1%80/</guid>
      <description>MongoDB 一、简介 MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。
MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的
 二、概念解析    概念/术语 解释/说明     database 数据库   collection 数据库表/集合   field 数据字段/域   index 索引   primary key 主键，默认将id设为主键    文档（Document） 文档是一组键值(key-value)对(即 BSON)。MongoDB 的文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型，这与关系型数据库有很大的区别，也是 MongoDB 非常突出的特点。
一个简单的文档例子如下：
{&amp;#34;site&amp;#34;:&amp;#34;www.blogpoliki.top&amp;#34;, &amp;#34;name&amp;#34;:&amp;#34;我的博客&amp;#34;} 集合（关系数据库中的表格） 集合存在于数据库中，集合没有固定的结构，这意味着你在对集合可以插入不同格式和类型的数据，但通常情况下我们插入集合的数据都会有一定的关联性
数据类型    数据类型 描述     String 字符串，UTF-8编码才是合法的   Integer 整型   Boolean 布尔型   Double 浮点型   Array 将数组或列表或多个值 存储为一个健   Min/Max key 将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比   Timestamp 时间戳   Object 用于内嵌文档   Null 空值   Symbol 一般用于采用特殊符号类型的语言   Date 日期时间    关系 MongoDB 的关系表示多个文档之间在逻辑上的相互联系。</description>
    </item>
    
    <item>
      <title>域名绑定Github仓库</title>
      <link>https://example.com/p/www/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/p/www/</guid>
      <description>博客绑定自定义的域名 阿里云/其他云搞域名 1.实名制 2.购买域名,并备案  3.获得SSL证书 在原站点可以选择免费的证书
用了SSL证书才能在服务器上转发
 将新的域名链接到GIthub的 第一种做法：
1.打开github对应的仓库 2.在settings中找到custom domain 3.输入新域名 4.在github pages下显示绿色的√就可以 5.访问新域名就可以看到网页了 第二种做法： 1.打开域名解析
2.配置
   主机记录 记录类型 isp 记录值     www A 默认 用ping你的github地址   @ CNAME 默认 昵称.github.io     参考链接：
https://blog.csdn.net/smalcat/article/details/79710039</description>
    </item>
    
    <item>
      <title>更改主题样式</title>
      <link>https://example.com/p/changeui/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/p/changeui/</guid>
      <description>编辑你的博客主题 今天来自定义Hugo使用的stack主题
 首先去到了主题的站点寻求说明文件，主题说明一步步往下看
1.站点全局设置 Hugo 的配置存放在站点根目录的 config.toml 里
  全局设置 
在这里我们可以知道默认文章会放在content/post文件夹下面
2.侧边栏设置   左侧边栏 
可以修改头像内容、站点介绍
头像默认是150×150 px 需要对头像修改一下尺寸
3.评论设置 需要一系列操作，本次先不执行
4.右侧边栏   右侧边栏 
5.自定义菜单   自定义菜单 
结果是一改就报错了</description>
    </item>
    
    <item>
      <title>更新博客的操作</title>
      <link>https://example.com/p/update/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/p/update/</guid>
      <description>每日更新Hugo 一般网上的视频或者文章只交了你搭建第一次，然后默认你会往后更新的操作了，只是对于我们这些白中白确实需要在仔细研究下
参考博文 地址： https://www.icode9.com/content-4-642752.html
每次更新就来复制一下
1.新建一个.md
$ hugo new 文件夹/文件名.md 2.更新到public文件夹中
$ hugo --theme=hugo-theme-stack --buildDrafts --baseUrl=&amp;quot;https://Poliki.github.io/&amp;quot; 3.常规操作 cd进public文件夹
$ git add .   $ git commit -m &amp;quot;这里是描述信息&amp;quot; 5.（非必须）
$ git remote add origin https://github.com/Polik/Poliki.github.io.git   $ git push git@github.com:Poliki/Poliki.github.io.git // 上面是ssh地址，也可以换成https的地址 https://github.com/Poliki/Poliki.github.io.git </description>
    </item>
    
    <item>
      <title>新建一个hugo站点</title>
      <link>https://example.com/p/newhugo/</link>
      <pubDate>Thu, 10 Dec 2020 01:51:08 +0800</pubDate>
      
      <guid>https://example.com/p/newhugo/</guid>
      <description>再装Hugo 主要是重装后配的hugo都么有了，这次重新看以前的笔记和视频来配置一次
建博初衷 无限听说&amp;quot;程序员拥有自己的技术博客是一件非常重要的事情&amp;quot;
初识Hugo 官方主页： https://gohugo.io
主题库： https://themes.hugo.io
介绍 hugo 是基于 Go 语言的静态网站生成器。有两种方式发布生成的静态网站文件：
1.放到自己的服务器上提供服务：需要自己购买服务器 2.把网站托管到 GitHub Pages：需要将静态页面文件 push 到 GitHub 的博客项目的 gh-pages 分支并确保根目录下有 index.html 文件。
 安装Hugo 1.官网下载 https://github.com/gohugoio/hugo/releases
找到Windows的版本进行安装，全程科学上网提速
2.配置环境变量 [ Win 10 ] 环境变量是经常配错的了，用户变量&amp;amp;系统变量搅浑是常态
这次亲测是在系统变量下，选择path -&amp;gt; 新建 -&amp;gt; 把刚解压的文件路径复制进去
如我的是：
D:\hugo_0.76.5 3.查看版本 CMD下输入hugo version就能查看到版本信息
 生成本地站点 1.Git 后面的命令基于Git，没有安装的话去看 ”Git的安装与使用“
2.生成站点 在你的安装目录下，我的是 D:\hugo_0.76.5，右键 git bash here
$ hugo new site 站点名称 然后就会生成这个”站点名称“文件夹了
3.设置主题 去主题库的网站（上文有）中找到你喜欢的，下载然后解压到站点名称/themes 文件夹中，有的会让你直接git下载，不过推荐去Github链接那里下快一点，详细的可以看每个主题下的说明文档
然后点进站点文件再 git bash here 执行</description>
    </item>
    
    <item>
      <title>Start</title>
      <link>https://example.com/p/start/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/p/start/</guid>
      <description>MD写法 The following HTML &amp;lt;h1&amp;gt;—&amp;lt;h6&amp;gt; elements represent six levels of section headings. &amp;lt;h1&amp;gt; is the highest section level while &amp;lt;h6&amp;gt; is the lowest.
H1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur?</description>
    </item>
    
  </channel>
</rss>
