<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Example Site</title>
    <link>https://Poliki.github.io/post/</link>
    <description>Recent content in Posts on Example Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Nov 2020 23:24:18 +0800</lastBuildDate><atom:link href="https://Poliki.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mock</title>
      <link>https://Poliki.github.io/p/mock/</link>
      <pubDate>Mon, 09 Nov 2020 23:24:18 +0800</pubDate>
      
      <guid>https://Poliki.github.io/p/mock/</guid>
      <description>Mock.js 入门使用  参考文章： https://www.cnblogs.com/soyxiaobi/p/9846057.html
https://segmentfault.com/a/1190000008839142
 一、安装&amp;amp;使用初衷 安装 npm: npm install mockjs
引入: &amp;lt;script src=&amp;quot;http://mockjs.com/dist/mock.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
略
 二、简单介绍 Mock.js 因为两个重要的特性风靡前端:
 数据类型丰富  支持生成随机的文本、数字、布尔值、日期、邮箱、链接、图片、颜色等。
 拦截 Ajax 请求  不需要修改既有代码，就可以拦截 Ajax 请求，返回模拟的响应数据。安全又便捷
文章会用到的API(也是Mock经常使用的API):
 Mock.mock(url, type, data)     参数名 参数需求 参数描述 例子     url 可选: URL 字符串或 URL 正则类型 拦截请求的地址 /mock   type 可选 拦截Ajax GET、POST   template 可选: 可以是对象或字符串 生成数据的模板 {&#39;data|1-10&#39;:[&#39;mock&#39;] }、&#39;@EMAIL&#39;    </description>
    </item>
    
    <item>
      <title>BindToTheDomain</title>
      <link>https://Poliki.github.io/p/bindtothedomain/</link>
      <pubDate>Thu, 29 Oct 2020 22:59:42 +0800</pubDate>
      
      <guid>https://Poliki.github.io/p/bindtothedomain/</guid>
      <description>博客绑定自定义的域名
阿里云/其他云搞域名 1.实名制 2.购买域名  去别的网站购买免费的SSL证书 1.如又拍云 https://www.upyun.com/
2.实名，填信息等 3.获得SSL证书  将新的域名链接到GIthub的域名上 1.打开github对应的仓库 2.在settings中找到custom domain 3.输入新域名 4.在github pages下显示绿色的√就可以 5.访问新域名就可以看到网页了 </description>
    </item>
    
    <item>
      <title>NewStartHugo</title>
      <link>https://Poliki.github.io/p/newstarthugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Poliki.github.io/p/newstarthugo/</guid>
      <description>再装Hugo 主要是重装后配的hugo都么有了，这次重新看以前的笔记和视频来配置一次
建博初衷 无限听说&amp;quot;程序员拥有自己的技术博客是一件非常重要的事情&amp;quot;
初识Hugo 官方主页： https://gohugo.io
主题库： https://themes.hugo.io
介绍 hugo 是基于 Go 语言的静态网站生成器。有两种方式发布生成的静态网站文件：
1.放到自己的服务器上提供服务：需要自己购买服务器 2.把网站托管到 GitHub Pages：需要将静态页面文件 push 到 GitHub 的博客项目的 gh-pages 分支并确保根目录下有 index.html 文件。
 安装Hugo 1.官网下载 https://github.com/gohugoio/hugo/releases
找到Windows的版本进行安装，全程科学上网提速
2.配置环境变量 [ Win 10 ] 环境变量是经常配错的了，用户变量&amp;amp;系统变量搅浑是常态
这次亲测是在系统变量下，选择path -&amp;gt; 新建 -&amp;gt; 把刚解压的文件路径复制进去
如我的是：
D:\hugo_0.76.5 3.查看版本 CMD下输入hugo version就能查看到版本信息
 生成本地站点 1.Git 后面的命令基于Git，没有安装的话去看 ”Git的安装与使用“
2.生成站点 在你的安装目录下，我的是 D:\hugo_0.76.5，右键 git bash here
$ hugo new site 站点名称 然后就会生成这个”站点名称“文件夹了
3.设置主题 去主题库的网站（上文有）中找到你喜欢的，下载然后解压到站点名称/themes 文件夹中，有的会让你直接git下载，不过推荐去Github链接那里下快一点，详细的可以看每个主题下的说明文档
然后点进站点文件再 git bash here 执行</description>
    </item>
    
  </channel>
</rss>
